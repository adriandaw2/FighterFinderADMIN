/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fighterfinderadmin.view;

import fighterfinderadmin.controller.Controller;
import fighterfinderadmin.entities.ACharacter;
import fighterfinderadmin.entities.AGame;
import fighterfinderadmin.entities.Model;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Adrian
 */
public class AddCharacterPanel extends javax.swing.JPanel implements ActionListener{
    
    private Controller myController;
    private Model myModel;
    private int currentGameID = -1;
    private List<AGame> aGList;
    private List<ACharacter> aCList;
    /**
     * Creates new form AddCharacterPanel
     */
    public AddCharacterPanel() {
        initComponents();
    }
    
    public AddCharacterPanel(Controller aController) {
        
        this.myController = aController;
        this.aGList = new ArrayList();
        this.aCList = new ArrayList();
        initComponents();
        fillGamesCombobox();
        addCustomCB();
        //gameListCB.addActionListener(this);
    }
    
    public AddCharacterPanel(Controller aController, Model aModel) {
        initComponents();
        this.myController = aController;
        this.myModel = aModel;
        fillGamesCombobox();
        addCustomCB();
        //gameListCB.addActionListener(this);
    }
    /**
     * fillGamesCombobox
     * Method to fill the combobox with the database data
     * 
     */
    private void fillGamesCombobox()
    {
        String[] arrTest = new String[]{"Game 1","Game 2","Game 3"};
        this.myModel.setMyGameList(this.myController.getAllGamesFromDatabase());
        this.aGList = this.myController.getAllGamesFromDatabase();
        //this.currentGameID = this.aGList.get(0).getId();
        //AGame[] gArray = new AGame[this.aGList.size()];
        //this.aGList.toArray(gArray);
       /* gameListCB.setModel(new DefaultComboBoxModel(this.aGList.toArray()));
        System.out.println(this.currentGameID);
        jComboBox1.setModel(new DefaultComboBoxModel(arrTest));*/
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        newCharNameTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        addCharBtn = new javax.swing.JButton();
        gameIDTF = new javax.swing.JTextField();
        gameInfoBtn = new javax.swing.JButton();

        setName("addGamePanel"); // NOI18N

        jLabel1.setText("Character name: ");

        jLabel2.setText("Game: ");

        addCharBtn.setText("Add character");
        addCharBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addCharBtnMouseClicked(evt);
            }
        });

        gameIDTF.setVerifyInputWhenFocusTarget(false);

        gameInfoBtn.setText("Game info");
        gameInfoBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gameInfoBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newCharNameTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gameIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(gameInfoBtn)
                        .addGap(79, 79, 79)
                        .addComponent(addCharBtn)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(newCharNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(gameIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCharBtn)
                    .addComponent(gameInfoBtn))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleParent(this);
    }// </editor-fold>//GEN-END:initComponents

    private void addCharBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCharBtnMouseClicked
        // TODO add your handling code here:
        //add to a game
        try{
            int gId = Integer.parseInt(gameIDTF.getText());
            if(newCharNameTF.getText().length()> 0 && gId > 0)
            {
                this.myController.addNewCharacterToGame(newCharNameTF.getText(), gId);
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Some data is not correct", "Add character to game info", JOptionPane.INFORMATION_MESSAGE);
            }
        }catch(NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(this, "Game ID must be a number", "Add character to game info", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_addCharBtnMouseClicked

    private void gameInfoBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gameInfoBtnMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, this.myModel.toStringAllGamesInfo(), "All games info", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_gameInfoBtnMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCharBtn;
    private javax.swing.JTextField gameIDTF;
    private javax.swing.JButton gameInfoBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField newCharNameTF;
    // End of variables declaration//GEN-END:variables

    private void addCustomCB() {
        JComboBox comboBox = new JComboBox(this.aGList.toArray());
        comboBox.addItemListener(new ItemListener() {
            //
            // Listening if a new items of the combo box has been selected.
            //
            @Override
            public void itemStateChanged(ItemEvent event) {
                JComboBox comboBox = (JComboBox) event.getSource();

                // The item affected by the event.
                Object item = event.getItem();
                System.out.println(item);
            }
        });
        add(comboBox);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        JComboBox cb = (JComboBox)e.getSource();
        AGame aG = (AGame)cb.getSelectedItem();
        this.currentGameID = aG.getId();
        System.out.println(this.currentGameID);
    }
}
