/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fighterfinderadmin.view;

import fighterfinderadmin.controller.Controller;
import fighterfinderadmin.entities.Model;
import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.event.ActionEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Alumne
 */
public class MainView extends javax.swing.JFrame {
    static final String ABOUT = "App made by Adrián de Feo Martínez and Albert Muñoz\nAdmin panel for FighterFinder\nVersion 0.8\nEmail: adriandefeomartinez@gmail.com\nCopyright 2016";
    private Controller myController;
    private Container pane;
    private Model myModel;
    //COntainer
    /**
     * Creates new form MainFrame
     */
    public MainView() {
        initComponents();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        //hideAll();
    }
    
    public MainView(Controller aController, Model aModel)
    {
        
        this.myController = aController;
        this.myModel = aModel;
        initComponents();
        this.myController.setMyView(this);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        pane = getContentPane();
        pane.setLayout(new BorderLayout());
        //hideAll();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        userMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        gameMenu = new javax.swing.JMenu();
        addGameItMenu = new javax.swing.JMenuItem();
        modGameItMenu = new javax.swing.JMenuItem();
        charMenu = new javax.swing.JMenu();
        addNewCharItMenu = new javax.swing.JMenuItem();
        modCharacterItMenu = new javax.swing.JMenuItem();
        objectiveMenu = new javax.swing.JMenu();
        addNewObjectiveMenuItem = new javax.swing.JMenuItem();
        modifyObjectiveMenuItem = new javax.swing.JMenuItem();
        aboutMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                closeApp(evt);
            }
        });

        userMenu.setText("Users");

        jMenuItem1.setText("jMenuItem1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showUserPanel(evt);
            }
        });
        userMenu.add(jMenuItem1);

        jMenuItem2.setText("jMenuItem2");
        userMenu.add(jMenuItem2);

        jMenuBar1.add(userMenu);

        gameMenu.setText("Games");

        addGameItMenu.setText("Add new game");
        addGameItMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAddNewGamePanel(evt);
            }
        });
        gameMenu.add(addGameItMenu);

        modGameItMenu.setText("Modify game");
        modGameItMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showModGamePanel(evt);
            }
        });
        gameMenu.add(modGameItMenu);

        jMenuBar1.add(gameMenu);

        charMenu.setText("Characters");

        addNewCharItMenu.setText("Add new character");
        addNewCharItMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewCharItMenuActionPerformed(evt);
            }
        });
        charMenu.add(addNewCharItMenu);

        modCharacterItMenu.setText("Modify character");
        modCharacterItMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showModCharPanel(evt);
            }
        });
        charMenu.add(modCharacterItMenu);

        jMenuBar1.add(charMenu);

        objectiveMenu.setText("Objective");

        addNewObjectiveMenuItem.setText("Add new objective");
        addNewObjectiveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAddNewObjectivePanel(evt);
            }
        });
        objectiveMenu.add(addNewObjectiveMenuItem);

        modifyObjectiveMenuItem.setText("Modify objective");
        modifyObjectiveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showModifyObjectivePanel(evt);
            }
        });
        objectiveMenu.add(modifyObjectiveMenuItem);

        jMenuBar1.add(objectiveMenu);

        aboutMenu.setText("About");
        aboutMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showAbout(evt);
            }
        });
        jMenuBar1.add(aboutMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 635, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 317, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     /**
     * closeApp
     * Method to close the app
     */
    private void closeApp(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeApp
        // TODO add your handling code here:
        this.myController.closeApp();
    }//GEN-LAST:event_closeApp
    
    
    //METHODS TO SHOW AND HIDE THE PANELS IN ADMIN STUFF
    private void showAbout(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showAbout
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, ABOUT, "About", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_showAbout

    private void addNewCharItMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewCharItMenuActionPerformed
        // TODO add your handling code here:
        /*hideAll();
        charPanel.setVisible(true);
        addNewCharPanel.setVisible(true);
        System.out.println("test");*/
        pane.removeAll();
        pane.add(new AddCharacterPanel(this.myController, this.myModel));
        //pane.add(new TestComboBoxGame(this.myController));
        //pack();
        setVisible(true);
    }//GEN-LAST:event_addNewCharItMenuActionPerformed

    private void showModCharPanel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showModCharPanel
        // TODO add your handling code here:
        /*hideAll();
        charPanel.setVisible(true);
        modCharPanel.setVisible(true);*/
        pane.removeAll();
        pane.add(new ModCharacterPanel(this.myController, this.myModel));
        //pack();
        setVisible(true);
    }//GEN-LAST:event_showModCharPanel
    
    
    
    private void showAddNewGamePanel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAddNewGamePanel
        // TODO add your handling code here:
        /*hideAll();
        gamePanel.setVisible(true);
        addGamePanel.setVisible(true);*/
        //this.myController.setCurrentPanel(new AddGamePanel(this.myController));
        //mainContainer.setContentPane
        pane.removeAll();
        pane.add(new AddGamePanel(this.myController));
        //pack();
        setVisible(true);
    }//GEN-LAST:event_showAddNewGamePanel

    private void showModGamePanel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showModGamePanel
        // TODO add your handling code here:
        /*hideAll();
        gamePanel.setVisible(true);
        modGamePanel.setVisible(true);*/
         pane.removeAll();
        pane.add(new ModGamePanel(this.myController, this.myModel));
        //pack();
        setVisible(true);
    }//GEN-LAST:event_showModGamePanel

    private void showUserPanel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showUserPanel
        // TODO add your handling code here:
        /*hideAll();
        userPanel.setVisible(true);*/
    }//GEN-LAST:event_showUserPanel

    private void showAddNewObjectivePanel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAddNewObjectivePanel
        // TODO add your handling code here:
        pane.removeAll();
        pane.add(new AddObjectivePanel(this.myController));
        //pack();
        setVisible(true);
    }//GEN-LAST:event_showAddNewObjectivePanel

    private void showModifyObjectivePanel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showModifyObjectivePanel
        // TODO add your handling code here:
        pane.removeAll();
        pane.add(new ModObjectivePanel(this.myController));
        //pack();
        setVisible(true);
    }//GEN-LAST:event_showModifyObjectivePanel
    
    /**
     * getMainContainer
     * Method to get the mainContainer
     * @return JPanel
     */
    /*public JPanel getMainContainer()
    {
        return mainContainer.setC;
    }*/
    
    private void hideAll()
    {
        //hide all the panels
        /*userPanel.setVisible(false);
        gamePanel.setVisible(false);
        charPanel.setVisible(false);
        modGamePanel.setVisible(false);
        addGamePanel.setVisible(false);
        modCharPanel.setVisible(false);
        addNewCharPanel.setVisible(false);*/
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu aboutMenu;
    private javax.swing.JMenuItem addGameItMenu;
    private javax.swing.JMenuItem addNewCharItMenu;
    private javax.swing.JMenuItem addNewObjectiveMenuItem;
    private javax.swing.JMenu charMenu;
    private javax.swing.JMenu gameMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem modCharacterItMenu;
    private javax.swing.JMenuItem modGameItMenu;
    private javax.swing.JMenuItem modifyObjectiveMenuItem;
    private javax.swing.JMenu objectiveMenu;
    private javax.swing.JMenu userMenu;
    // End of variables declaration//GEN-END:variables
}
